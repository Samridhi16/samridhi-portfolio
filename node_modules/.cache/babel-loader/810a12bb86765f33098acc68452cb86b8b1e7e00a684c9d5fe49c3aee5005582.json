{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samri\\\\WebDev\\\\portfolio\\\\portfolio\\\\src\\\\InfoCards.js\";\nimport * as React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Typography from \"@mui/material/Typography\";\nimport Grid from \"@mui/material/Grid\"; // Import the Grid component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardStyle = {\n  width: 300,\n  // Set the width to your desired fixed width\n  height: 400 // Set the height to your desired fixed height\n};\n\nexport default function InfoCards(props) {\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 40,\n    children: props.info.map((info, index) => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      md: 6,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: cardStyle,\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          title: info.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CardMedia, {\n          component: \"img\",\n          height: \"194\",\n          image: info.image,\n          alt: info.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            children: info.body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n\n  // return (\n  //   <Grid container spacing={2}> {/* Use a Grid container */}\n  //     <Grid item xs={12} sm={12} md={6}> {/* Create a grid item for the first card */}\n  //       <Card sx={cardStyle}>\n  //         <CardHeader title= {props[0].title}/>\n  //         <CardMedia\n  //           component=\"img\"\n  //           height=\"194\"\n  //           image={props.img1}\n  //           alt={props.title1}\n  //         />\n  //         <CardContent>\n  //           <Typography variant=\"body2\" color=\"text.secondary\">\n  //           {props.body1}\n  //           </Typography>\n  //         </CardContent>\n  //       </Card>\n  //     </Grid>\n\n  //     <Grid item xs={12} sm={12} md={6}> {/* Create a grid item for the second card */}\n  //       <Card sx={cardStyle}>\n  //         <CardHeader title={props.title2} /> {/* You can customize the second card similarly */}\n  //         <CardMedia\n  //           component=\"img\"\n  //           height=\"194\"\n  //           image={props.img2}\n  //           alt={props.title2}\n  //         />\n  //         <CardContent>\n  //           <Typography variant=\"body2\" color=\"text.secondary\">\n  //           {props.body2}\n  //           </Typography>\n  //         </CardContent>\n  //       </Card>\n  //     </Grid>\n  //   </Grid>\n  // );\n}\n_c = InfoCards;\nvar _c;\n$RefreshReg$(_c, \"InfoCards\");","map":{"version":3,"names":["React","Card","CardHeader","CardMedia","CardContent","Typography","Grid","jsxDEV","_jsxDEV","cardStyle","width","height","InfoCards","props","container","spacing","children","info","map","index","item","xs","sm","md","sx","title","fileName","_jsxFileName","lineNumber","columnNumber","component","image","alt","variant","color","body","_c","$RefreshReg$"],"sources":["C:/Users/samri/WebDev/portfolio/portfolio/src/InfoCards.js"],"sourcesContent":["import * as React from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Grid from \"@mui/material/Grid\"; // Import the Grid component\r\n\r\nconst cardStyle = {\r\n    width: 300, // Set the width to your desired fixed width\r\n    height: 400, // Set the height to your desired fixed height\r\n  };\r\n\r\nexport default function InfoCards(props) {\r\n  return (\r\n    <Grid container spacing={40}>\r\n      {props.info.map((info, index) => (\r\n        <Grid item xs={12} sm={12} md={6} key={index}>\r\n          <Card sx={cardStyle}>\r\n            <CardHeader title={info.title} />\r\n            <CardMedia\r\n              component=\"img\"\r\n              height=\"194\"\r\n              image={info.image}\r\n              alt={info.title}\r\n            />\r\n            <CardContent>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                {info.body}\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n  \r\n\r\n\r\n  // return (\r\n  //   <Grid container spacing={2}> {/* Use a Grid container */}\r\n  //     <Grid item xs={12} sm={12} md={6}> {/* Create a grid item for the first card */}\r\n  //       <Card sx={cardStyle}>\r\n  //         <CardHeader title= {props[0].title}/>\r\n  //         <CardMedia\r\n  //           component=\"img\"\r\n  //           height=\"194\"\r\n  //           image={props.img1}\r\n  //           alt={props.title1}\r\n  //         />\r\n  //         <CardContent>\r\n  //           <Typography variant=\"body2\" color=\"text.secondary\">\r\n  //           {props.body1}\r\n  //           </Typography>\r\n  //         </CardContent>\r\n  //       </Card>\r\n  //     </Grid>\r\n\r\n  //     <Grid item xs={12} sm={12} md={6}> {/* Create a grid item for the second card */}\r\n  //       <Card sx={cardStyle}>\r\n  //         <CardHeader title={props.title2} /> {/* You can customize the second card similarly */}\r\n  //         <CardMedia\r\n  //           component=\"img\"\r\n  //           height=\"194\"\r\n  //           image={props.img2}\r\n  //           alt={props.title2}\r\n  //         />\r\n  //         <CardContent>\r\n  //           <Typography variant=\"body2\" color=\"text.secondary\">\r\n  //           {props.body2}\r\n  //           </Typography>\r\n  //         </CardContent>\r\n  //       </Card>\r\n  //     </Grid>\r\n  //   </Grid>\r\n  // );\r\n}\r\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,IAAI,MAAM,oBAAoB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,SAAS,GAAG;EACdC,KAAK,EAAE,GAAG;EAAE;EACZC,MAAM,EAAE,GAAG,CAAE;AACf,CAAC;;AAEH,eAAe,SAASC,SAASA,CAACC,KAAK,EAAE;EACvC,oBACEL,OAAA,CAACF,IAAI;IAACQ,SAAS;IAACC,OAAO,EAAE,EAAG;IAAAC,QAAA,EACzBH,KAAK,CAACI,IAAI,CAACC,GAAG,CAAC,CAACD,IAAI,EAAEE,KAAK,kBAC1BX,OAAA,CAACF,IAAI;MAACc,IAAI;MAACC,EAAE,EAAE,EAAG;MAACC,EAAE,EAAE,EAAG;MAACC,EAAE,EAAE,CAAE;MAAAP,QAAA,eAC/BR,OAAA,CAACP,IAAI;QAACuB,EAAE,EAAEf,SAAU;QAAAO,QAAA,gBAClBR,OAAA,CAACN,UAAU;UAACuB,KAAK,EAAER,IAAI,CAACQ;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACjCrB,OAAA,CAACL,SAAS;UACR2B,SAAS,EAAC,KAAK;UACfnB,MAAM,EAAC,KAAK;UACZoB,KAAK,EAAEd,IAAI,CAACc,KAAM;UAClBC,GAAG,EAAEf,IAAI,CAACQ;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjB,CAAC,eACFrB,OAAA,CAACJ,WAAW;UAAAY,QAAA,eACVR,OAAA,CAACH,UAAU;YAAC4B,OAAO,EAAC,OAAO;YAACC,KAAK,EAAC,gBAAgB;YAAAlB,QAAA,EAC/CC,IAAI,CAACkB;UAAI;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV;IAAC,GAd8BV,KAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAetC,CACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;;EAKT;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF;AAACO,EAAA,GA/DuBxB,SAAS;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}