{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samri\\\\WebDev\\\\portfolio\\\\portfolio\\\\src\\\\App.js\";\nimport lift from './res/girl-lift.png';\nimport railing from './res/railing.png';\nimport sky from './res/sky.png';\nimport terrace from './res/terrace.jpg';\nimport './App.css';\nimport { Parallax, ParallaxLayer } from '@react-spring/parallax';\nimport React, { useState, useEffect } from 'react';\nimport styles from './styles.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  // const [sticky, setSticky] = useState(() => ({\n  //   start: 0.45,\n  //   end: 4\n  // }));\n\n  // // Add an event listener to update the state when window is resized\n  // useEffect(() => {\n  //   const handleResize = () => {\n  //     if (window.innerWidth <= 768) {\n  //       console.log(\"Window size changed: <= 768\");\n  //       setSticky({ start: -2.2, end: 4 });\n  //       // console.log(\"<=768\",sticky)\n  //     } else {\n  //       console.log(\"Window size changed: > 768\");\n  //       setSticky({ start: 0.45, end: 4 });\n  //       // console.log(\">768\",sticky)\n  //     }\n  //   };\n\n  //   window.addEventListener('resize', handleResize);\n\n  //   // Clean up the event listener when component unmounts\n  //   return () => {\n  //     window.removeEventListener('resize', handleResize);\n  //   };\n  // }, []);\n\n  // useEffect(() => {\n  //   console.log(\"Sticky state updated:\", sticky);\n  // }, [sticky]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex-container\",\n    children: /*#__PURE__*/_jsxDEV(Parallax, {\n      pages: 4,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-item1\",\n        children: /*#__PURE__*/_jsxDEV(ParallaxLayer, {\n          offset: 0,\n          speed: 1,\n          factor: 1,\n          style: {\n            backgroundImage: `url(${terrace})`,\n            backgroundSize: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ParallaxLayer, {\n        sticky: {\n          start: 0,\n          end: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: lift,\n            style: {\n              maxWidth: '100%',\n              height: 'auto'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ParallaxLayer, {\n        offset: 1,\n        speed: 1,\n        factor: 1,\n        style: {\n          backgroundImage: `url(${sky})`,\n          backgroundSize: 'cover'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ParallaxLayer, {\n        offset: 2,\n        speed: 1,\n        factor: 1,\n        style: {\n          backgroundImage: `url(${sky})`,\n          backgroundSize: 'cover'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\n\n// export default function App() {\n//   const alignCenter = { display: 'flex', alignItems: 'center' }\n//   return (\n//     <div>\n//       <div className={styles.background} />\n\n//       <Parallax pages={5}>\n//         <ParallaxLayer offset={0} speed={0.5} style={{ ...alignCenter, justifyContent: 'center' }}>\n//           <p className={styles.scrollText}>Scroll down</p>\n//         </ParallaxLayer>\n\n//         <ParallaxLayer sticky={{ start: 1, end: 3 }} style={{ ...alignCenter, justifyContent: 'flex-start' }}>\n//           <div className={`${styles.card} ${styles.sticky}`}>\n//             <p>I'm a sticky layer</p>\n//           </div>\n//         </ParallaxLayer>\n\n//         <ParallaxLayer offset={1.5} speed={1.5} style={{ ...alignCenter, justifyContent: 'flex-end' }}>\n//           <div className={`${styles.card} ${styles.parallax} ${styles.purple}`}>\n//             <p>I'm not</p>\n//           </div>\n//         </ParallaxLayer>\n\n//         <ParallaxLayer offset={2.5} speed={1.5} style={{ ...alignCenter, justifyContent: 'flex-end' }}>\n//           <div className={`${styles.card} ${styles.parallax} ${styles.blue}`}>\n//             <p>Neither am I</p>\n//           </div>\n//         </ParallaxLayer>\n//       </Parallax>\n//     </div>\n//   )\n// }\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["lift","railing","sky","terrace","Parallax","ParallaxLayer","React","useState","useEffect","styles","jsxDEV","_jsxDEV","App","className","children","pages","offset","speed","factor","style","backgroundImage","backgroundSize","fileName","_jsxFileName","lineNumber","columnNumber","sticky","start","end","src","maxWidth","height","_c","$RefreshReg$"],"sources":["C:/Users/samri/WebDev/portfolio/portfolio/src/App.js"],"sourcesContent":["import lift from './res/girl-lift.png'\nimport railing from './res/railing.png'\nimport sky from './res/sky.png'\nimport terrace from './res/terrace.jpg'\nimport './App.css';\nimport { Parallax, ParallaxLayer } from '@react-spring/parallax';\nimport React, { useState, useEffect } from 'react';\nimport styles from './styles.module.css'\n\nfunction App() {\n  // const [sticky, setSticky] = useState(() => ({\n  //   start: 0.45,\n  //   end: 4\n  // }));\n  \n\n  // // Add an event listener to update the state when window is resized\n  // useEffect(() => {\n  //   const handleResize = () => {\n  //     if (window.innerWidth <= 768) {\n  //       console.log(\"Window size changed: <= 768\");\n  //       setSticky({ start: -2.2, end: 4 });\n  //       // console.log(\"<=768\",sticky)\n  //     } else {\n  //       console.log(\"Window size changed: > 768\");\n  //       setSticky({ start: 0.45, end: 4 });\n  //       // console.log(\">768\",sticky)\n  //     }\n  //   };\n\n  //   window.addEventListener('resize', handleResize);\n\n  //   // Clean up the event listener when component unmounts\n  //   return () => {\n  //     window.removeEventListener('resize', handleResize);\n  //   };\n  // }, []);\n\n  // useEffect(() => {\n  //   console.log(\"Sticky state updated:\", sticky);\n  // }, [sticky]);\n  \n\n  return (\n    <div className=\"flex-container\">\n      <Parallax pages={4}>\n        {/* // page 1 */}\n        <div className=\"flex-item1\">\n          <ParallaxLayer\n            offset={0}\n            speed={1}\n            factor={1}\n            style={{\n              backgroundImage: `url(${terrace})`,\n              backgroundSize: '100%'\n            }}\n          ></ParallaxLayer>\n        </div>\n        {/* //elevator */}\n        <ParallaxLayer sticky={{ start: 0, end: 3 }}>\n          <div className= \"card\">\n          <img src={lift} style={{ maxWidth: '100%', height: 'auto' }} />\n          </div>\n        </ParallaxLayer>\n        {/* <div className=\"flex-item2\">\n          <ParallaxLayer\n            sticky={sticky}\n            offset={0}\n            speed={1}\n            factor={1}\n            style={{ textAlign: 'left', flex: 2 }}\n          >\n            <div className=\"card\">\n              <img src={lift} className=\"sticky-image\" style={{ maxWidth: '100%', height: 'auto' }} />\n            </div>\n          </ParallaxLayer>\n        </div> */}\n        {/* // page 2 */}\n        <ParallaxLayer\n          offset={1}\n          speed={1}\n          factor={1}\n          style={{\n            backgroundImage: `url(${sky})`,\n            backgroundSize: 'cover',\n          }}\n        ></ParallaxLayer>\n\n        {/* // page 3 */}\n        <ParallaxLayer\n          offset={2}\n          speed={1}\n          factor={1}\n          style={{\n            backgroundImage: `url(${sky})`,\n            backgroundSize: 'cover',\n          }}\n        ></ParallaxLayer>\n\n      </Parallax>\n    </div>\n  );\n}\n\nexport default App;\n\n// export default function App() {\n//   const alignCenter = { display: 'flex', alignItems: 'center' }\n//   return (\n//     <div>\n//       <div className={styles.background} />\n\n//       <Parallax pages={5}>\n//         <ParallaxLayer offset={0} speed={0.5} style={{ ...alignCenter, justifyContent: 'center' }}>\n//           <p className={styles.scrollText}>Scroll down</p>\n//         </ParallaxLayer>\n\n//         <ParallaxLayer sticky={{ start: 1, end: 3 }} style={{ ...alignCenter, justifyContent: 'flex-start' }}>\n//           <div className={`${styles.card} ${styles.sticky}`}>\n//             <p>I'm a sticky layer</p>\n//           </div>\n//         </ParallaxLayer>\n\n//         <ParallaxLayer offset={1.5} speed={1.5} style={{ ...alignCenter, justifyContent: 'flex-end' }}>\n//           <div className={`${styles.card} ${styles.parallax} ${styles.purple}`}>\n//             <p>I'm not</p>\n//           </div>\n//         </ParallaxLayer>\n\n//         <ParallaxLayer offset={2.5} speed={1.5} style={{ ...alignCenter, justifyContent: 'flex-end' }}>\n//           <div className={`${styles.card} ${styles.parallax} ${styles.blue}`}>\n//             <p>Neither am I</p>\n//           </div>\n//         </ParallaxLayer>\n//       </Parallax>\n//     </div>\n//   )\n// }\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}